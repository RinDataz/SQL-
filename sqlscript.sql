DROP TABLE CUSTOMERS_COPY


DROP TABLE ORDERS_COPY


drop TABLE  T_ORDER_DATE


DROP TABLE T_DATE


DROP SEQUENCE SEQ_ID_DATE


DROP TABLE T_SALESMAN


DROP TABLE F_ORDERS


DROP TABLE D_CUSTOMERS


DROP TABLE D_TIME


DROP TABLE D_ORDERS


DROP TABLE D_SALESMAN


DROP SEQUENCE SEQ_F_ORDERS


CREATE TABLE CUSTOMERS_COPY AS 
SELECT CUSTOMER_ID, CUST_FIRST_NAME, CUST_LAST_NAME, NLS_LANGUAGE, NLS_TERRITORY, 
CREDIT_LIMIT, CUST_EMAIL, ACCOUNT_MGR_ID, CUST_GEO_LOCATION, DATE_OF_BIRTH, 
MARITAL_STATUS, GENDER, INCOME_LEVEL 
FROM OE.CUSTOMERS;

CREATE TABLE ORDERS_COPY AS 
SELECT * FROM OE.ORDERS;

CREATE TABLE  T_ORDER_DATE AS  
SELECT  DISTINCT TO_DATE(TO_CHAR(ORDER_DATE, 'DD-MON-YYYY')) ORDER_DATE from OE.ORDERS;

CREATE TABLE T_DATE ( 
ID_DATE NUMBER(5), 
ORDER_DATE	DATE, 
Day_No	NUMBER(1), 
Day_Name	CHAR(10), 
Month_NO	NUMBER(2), 
Month_Name 	CHAR(10), 
Quarter	NUMBER(1), 
YYear		NUMBER(4), 
CONSTRAINT PK_ID_DATE PRIMARY KEY (ID_DATE));

CREATE SEQUENCE SEQ_ID_DATE START WITH 10000;

INSERT INTO T_DATE 
SELECT  SEQ_ID_DATE.NEXTVAL, ORDER_DATE, 
    TO_NUMBER(TO_CHAR(ORDER_DATE,'D')), 
    TO_CHAR(ORDER_DATE,'Day'), 
    TO_NUMBER(TO_CHAR(ORDER_DATE,'MM')), 
    TO_CHAR(ORDER_DATE,'MONTH'), 
    TO_NUMBER(TO_CHAR(ORDER_DATE,'Q')), 
    TO_NUMBER(TO_CHAR(ORDER_DATE,'YYYY')) 
FROM T_ORDER_DATE;

CREATE TABLE T_SALESMAN AS 
SELECT Distinct (SALES_REP_ID) 
FROM OE.ORDERS;

UPDATE T_SALESMAN 
SET SALES_REP_ID=NVL(SALES_REP_ID,999);

ALTER TABLE T_SALESMAN 
ADD SNAME varchar(255);

UPDATE T_SALESMAN 
SET SNAME= 'NAME-' || SALES_REP_ID;

create table  D_CUSTOMERS 
as select CUSTOMER_ID ID_C , CUST_FIRST_NAME C_FNAME, CUST_LAST_NAME C_LNAME, GENDER ,MARITAL_STATUS TTYPE 
from CUSTOMERS_COPY;

create table  D_TIME as select ID_DATE ID_T , ORDER_DATE DDATE, MONTH_NO, MONTH_NAME,QUARTER, YYEAR 
from t_date;

create table  D_ORDERS as select ORDER_ID ID_O ,ORDER_MODE OMode, ORDER_STATUS STATUS 
FROM ORDERS_COPY;

create table  D_SALESMAN as select SALES_REP_ID ID_S , SNAME 
FROM T_SALESMAN;

ALTER TABLE D_CUSTOMERS ADD CONSTRAINT PK_D_CUSTOMERS 
PRIMARY KEY(ID_C);

ALTER TABLE D_ORDERS ADD CONSTRAINT PK_D_ORDERS  
PRIMARY KEY(ID_O);

ALTER TABLE D_SALESMAN ADD CONSTRAINT PK_D_SALESMAN  
PRIMARY KEY(ID_S);

ALTER TABLE D_TIME ADD CONSTRAINT PK_D_TIME  
PRIMARY KEY(ID_T);

CREATE TABLE F_ORDERS ( 
F_ORDERS_ID NUMBER(22), 
ORDER_AMOUNT NUMBER(22,2), 
F_ID_C	NUMBER(22), 
F_ID_O	NUMBER(22), 
F_ID_T	NUMBER(22), 
F_ID_S 	NUMBER(22) 
);

ALTER TABLE F_ORDERS ADD CONSTRAINT PK_F_ORDERS_ID PRIMARY KEY (F_ORDERS_ID);

ALTER TABLE F_ORDERS ADD CONSTRAINT FK_F_ORDERS_TO_CUSTOMERS 
FOREIGN KEY(F_ID_C) REFERENCES D_CUSTOMERS(ID_C);

ALTER TABLE F_ORDERS ADD CONSTRAINT FK_F_ORDERS_TO_ORDERS 
FOREIGN KEY(F_ID_O) REFERENCES D_ORDERS (ID_O);

ALTER TABLE F_ORDERS ADD CONSTRAINT FK_F_ORDERS_TO_SALESMAN 
FOREIGN KEY(F_ID_S) REFERENCES D_SALESMAN (ID_S);

ALTER TABLE F_ORDERS ADD CONSTRAINT FK_F_ORDERS_TO_TIME 
FOREIGN KEY(F_ID_T) REFERENCES D_TIME (ID_T);

CREATE SEQUENCE SEQ_F_ORDERS START WITH 1;

INSERT INTO F_ORDERS 
SELECT SEQ_F_ORDERS.NEXTVAL, 
        ORDER_TOTAL, 
        ID_C, 
        ID_O, 
        ID_T, 
        ID_S 
FROM   ORDERS_COPY   
LEFT JOIN   D_CUSTOMERS ON ORDERS_COPY.CUSTOMER_ID=D_CUSTOMERS.ID_C 
LEFT JOIN  	D_ORDERS ON ORDERS_COPY.ORDER_ID =D_ORDERS.ID_O 
LEFT JOIN   D_TIME ON TO_DATE(TO_CHAR(ORDERS_COPY.ORDER_DATE,'DD-MON-YY'))= D_TIME.DDATE  
LEFT JOIN   D_SALESMAN ON ORDERS_COPY.SALES_REP_ID =D_SALESMAN.ID_S;

SELECT COUNT(*) AS Num_Orders  
FROM D_ORDERS;

SELECT COUNT(*) AS Num_Orders  
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(ORDER_AMOUNT) AS Average 
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(round(ORDER_AMOUNT)) AS Average 
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(roundup(ORDER_AMOUNT)) AS Average 
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(roof(ORDER_AMOUNT)) AS Average 
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(CELLING(ORDER_AMOUNT)) AS Average 
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(TRUNC(ORDER_AMOUNT)) AS Average 
FROM F_ORDERS;

SELECT  
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(ORDER_AMOUNT) AS Average 
FROM F_ORDERS;

SELECT  
    F_ID_C AS Customer_ID, 
    MIN(ORDER_AMOUNT) AS Lowest, 
    MAX(ORDER_AMOUNT) AS Highest, 
    AVG(ORDER_AMOUNT) AS Average 
FROM F_ORDERS 
GROUP BY F_ID_C;

WITH Avg_Order_Amount AS ( 
    SELECT AVG(ORDER_AMOUNT) AS Global_Avg 
    FROM F_ORDERS 
) 
SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    AVG(F_ORDERS.ORDER_AMOUNT) AS Avg_Amount 
FROM F_ORDERS 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME 
HAVING AVG(F_ORDERS.ORDER_AMOUNT) > 2 * (SELECT Global_Avg FROM Avg_Order_Amount)


SELECT  
    F_ORDERS.F_ID_S AS Salesman_ID, 
    D_SALESMAN.SNAME AS Salesman_Name, 
    COUNT(*) AS Num_Orders 
FROM F_ORDERS 
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S 
GROUP BY F_ORDERS.F_ID_S, D_SALESMAN.SNAME;

SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    COUNT(*) AS Num_Orders 
FROM F_ORDERS 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME;

SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    COUNT(*) AS Num_Orders, 
    SUM(F_ORDERS.ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME 
ORDER BY Num_Orders DESC;

WITH Avg_Order_Amount AS ( 
    SELECT AVG(ORDER_AMOUNT) AS Global_Avg 
    FROM F_ORDERS 
) 
SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    SUM(F_ORDERS.ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME 
HAVING Total_Amount > 0.8 * (SELECT Global_Avg FROM Avg_Order_Amount)


SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    SUM(F_ORDERS.ORDER_AMOUNT) 
FROM F_ORDERS 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME 
HAVING Total_Amount > 0.8 * (SELECT Global_Avg FROM Avg_Order_Amount);

SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    D_SALESMAN.ID_S AS Salesman_ID, 
    D_SALESMAN.SNAME AS Salesman_Name, 
    COUNT(*) AS Num_Orders 
FROM F_ORDERS 
JOIN D_ORDERS ON F_ORDERS.F_ID_O = D_ORDERS.ID_O 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S 
WHERE D_ORDERS.OMode = 'DIRECT' 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME, D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT  
    D_TIME.YYEAR AS Year, 
    D_CUSTOMERS.ID_C AS Customer_ID, 
    SUM(F_ORDERS.ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_TIME ON F_ORDERS.F_ID_T = D_TIME.ID_T 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_TIME.YYEAR, D_CUSTOMERS.ID_C 
ORDER BY D_TIME.YYEAR, D_CUSTOMERS.ID_C;

SELECT  
    D_TIME.YYEAR AS Year, 
    D_TIME.QUARTER AS Quarter, 
    D_CUSTOMERS.ID_C AS Customer_ID, 
    SUM(F_ORDERS.ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_TIME ON F_ORDERS.F_ID_T = D_TIME.ID_T 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_TIME.YYEAR, D_TIME.QUARTER, D_CUSTOMERS.ID_C 
ORDER BY D_TIME.YYEAR, D_TIME.QUARTER, D_CUSTOMERS.ID_C;

SELECT  
    D_TIME.YYEAR AS Year, 
    D_TIME.QUARTER AS Quarter, 
    D_TIME.MONTH_NO AS Month_No, 
    D_CUSTOMERS.ID_C AS Customer_ID, 
    SUM(F_ORDERS.ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_TIME ON F_ORDERS.F_ID_T = D_TIME.ID_T 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_TIME.YYEAR, D_TIME.QUARTER, D_TIME.MONTH_NO, D_CUSTOMERS.ID_C 
ORDER BY D_TIME.YYEAR, D_TIME.QUARTER, D_TIME.MONTH_NO, D_CUSTOMERS.ID_C;

SELECT  
    OMODE, 
    D_TIME.YYEAR AS Year, 
    SUM(ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_TIME ON F_ORDERS.F_ID_T = D_TIME.ID_T 
JOIN D_ORDERS ON F_ORDERS.F_ID_O = D_ORDERS.ID_O 
GROUP BY ROLLUP(OMODE, D_TIME.YYEAR) 
ORDER BY OMODE, D_TIME.YYEAR;

SELECT  
    F_ORDERS.F_ID_S AS Salesman_ID, 
    D_SALESMAN.SNAME AS Salesman_Name, 
    COUNT(*) AS Num_Orders 
FROM F_ORDERS 
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S 
GROUP BY F_ORDERS.F_ID_S, D_SALESMAN.SNAME;

SELECT  
    D_SALESMAN.ID_S AS Salesman_ID, 
    D_SALESMAN.SNAME AS Salesman_Name, 
    COUNT(F_ORDERS.F_ORDERS_ID) AS Num_Orders 
FROM F_ORDERS 
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S 
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

WITH Avg_Order_Amount AS ( 
    SELECT AVG(ORDER_AMOUNT) AS Global_Avg 
    FROM F_ORDERS 
) 
SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    SUM(F_ORDERS.ORDER_AMOUNT) AS Total_Amount 
FROM F_ORDERS 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME 
HAVING Total_Amount > 0.8 * (SELECT Global_Avg FROM Avg_Order_Amount)


SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    D_SALESMAN.ID_S AS Salesman_ID, 
    D_SALESMAN.SNAME AS Salesman_Name, 
    COUNT(F_ORDERS.F_ORDERS_ID) AS Num_Orders 
FROM F_ORDERS 
JOIN D_ORDERS ON F_ORDERS.F_ID_O = D_ORDERS.ID_O 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S 
WHERE D_ORDERS.OMode = 'DIRECT' 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME, D_SALESMAN.ID_S, D_SALESMAN.SNAME 
ORDER BY D_CUSTOMERS.ID_C, D_SALESMAN.ID_S;

SELECT D_SALESMAN.SALES_REP_ID, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_SALESMAN_ID = D_SALESMAN.SALES_REP_ID  
GROUP BY D_SALESMAN.SALES_REP_ID, D_SALESMAN.SNAME;

SELECT D_SALESMAN.SALES_REP_ID, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_SALESMAN_ID = D_SALESMAN.SALES_REP_ID  
GROUP BY D_SALESMAN.SALES_REP_ID, D_SALESMAN.SNAME;

SELECT*FROM D_SALESMAN;

SELECT*FROM F_ORDERS;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
LEFT JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
RIGHT JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
NATURAL JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
WHERE F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
WHERE F_ORDERS.F_ID_S EXISTS IN D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT*FROM F_ORDERS;

SELECT UNIQUE COUNT(*) F_ID_S from f_Orders;

SELECT  COUNT(*) UNIQUE F_ID_S from f_Orders;

SELECT UNIQUE COUNT(F_ID_S) from f_Orders;

SELECT UNIQUE COUNT(F_ID_S) from D_SALESMAN;

SELECT UNIQUE COUNT(ID_S) from D_SALESMAN;

SELECT D_SALESMAN.ID_S, D_SALESMAN.SNAME, COUNT(*) AS NumberofOrders  
FROM F_ORDERS  
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S  
GROUP BY D_SALESMAN.ID_S, D_SALESMAN.SNAME;

SELECT  
    D_CUSTOMERS.ID_C AS Customer_ID, 
    D_CUSTOMERS.C_FNAME AS First_Name, 
    D_CUSTOMERS.C_LNAME AS Last_Name, 
    D_SALESMAN.ID_S AS Salesman_ID, 
    D_SALESMAN.SNAME AS Salesman_Name, 
    COUNT(F_ORDERS.F_ORDERS_ID) AS Num_Orders 
FROM F_ORDERS 
JOIN D_ORDERS ON F_ORDERS.F_ID_O = D_ORDERS.ID_O 
JOIN D_CUSTOMERS ON F_ORDERS.F_ID_C = D_CUSTOMERS.ID_C 
JOIN D_SALESMAN ON F_ORDERS.F_ID_S = D_SALESMAN.ID_S 
WHERE D_ORDERS.OMode = 'DIRECT' 
GROUP BY D_CUSTOMERS.ID_C, D_CUSTOMERS.C_FNAME, D_CUSTOMERS.C_LNAME, D_SALESMAN.ID_S, D_SALESMAN.SNAME 
ORDER BY D_CUSTOMERS.ID_C, D_SALESMAN.ID_S;

